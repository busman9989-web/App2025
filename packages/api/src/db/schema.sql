DROP TABLE IF EXISTS comments; DROP TABLE IF EXISTS post_votes; DROP TABLE IF EXISTS posts; DROP TABLE IF EXISTS journal_entries; DROP TABLE IF EXISTS resources; DROP TABLE IF EXISTS checklists; DROP TABLE IF EXISTS reports; DROP TABLE IF EXISTS appointments; DROP TABLE IF EXISTS users;
CREATE TABLE users ( id UUID PRIMARY KEY DEFAULT gen_random_uuid(), email TEXT UNIQUE NOT NULL, password_hash TEXT NOT NULL, role TEXT NOT NULL DEFAULT 'user', created_at TIMESTAMPTZ DEFAULT NOW(), is_verified BOOLEAN DEFAULT FALSE, verification_token TEXT, two_fa_secret TEXT, two_fa_enabled BOOLEAN DEFAULT FALSE, display_name_encrypted TEXT, status_encrypted TEXT );
CREATE TABLE posts ( id UUID PRIMARY KEY DEFAULT gen_random_uuid(), user_id UUID REFERENCES users(id) ON DELETE CASCADE, is_anonymous BOOLEAN DEFAULT FALSE, content TEXT NOT NULL, category TEXT NOT NULL, created_at TIMESTAMPTZ DEFAULT NOW() );
CREATE TABLE post_votes ( user_id UUID REFERENCES users(id) ON DELETE CASCADE, post_id UUID REFERENCES posts(id) ON DELETE CASCADE, vote_type INT NOT NULL, PRIMARY KEY (user_id, post_id) );
CREATE TABLE appointments ( id UUID PRIMARY KEY DEFAULT gen_random_uuid(), user_id UUID REFERENCES users(id) ON DELETE CASCADE, title TEXT NOT NULL, description TEXT, appointment_datetime TIMESTAMPTZ NOT NULL, location TEXT, created_at TIMESTAMPTZ DEFAULT NOW(), updated_at TIMESTAMPTZ DEFAULT NOW() );
CREATE TABLE comments ( id UUID PRIMARY KEY DEFAULT gen_random_uuid(), post_id UUID REFERENCES posts(id) ON DELETE CASCADE, user_id UUID REFERENCES users(id) ON DELETE SET NULL, parent_comment_id UUID REFERENCES comments(id) ON DELETE CASCADE, content TEXT NOT NULL, created_at TIMESTAMPTZ DEFAULT NOW() );
CREATE TABLE journal_entries ( id UUID PRIMARY KEY DEFAULT gen_random_uuid(), user_id UUID REFERENCES users(id) ON DELETE CASCADE NOT NULL, entry_date DATE NOT NULL, mood_rating INT CHECK (mood_rating >= 1 AND mood_rating <= 5), entry_text_encrypted TEXT NOT NULL, created_at TIMESTAMPTZ DEFAULT NOW(), updated_at TIMESTAMPTZ DEFAULT NOW(), UNIQUE(user_id, entry_date) );
CREATE TABLE resources ( id UUID PRIMARY KEY DEFAULT gen_random_uuid(), title TEXT NOT NULL, content TEXT, category TEXT, external_url TEXT, created_at TIMESTAMPTZ DEFAULT NOW(), updated_at TIMESTAMPTZ DEFAULT NOW() );
CREATE TABLE checklists ( id UUID PRIMARY KEY DEFAULT gen_random_uuid(), user_id UUID REFERENCES users(id) ON DELETE CASCADE, name TEXT NOT NULL, items JSONB DEFAULT '[]'::jsonb, is_template BOOLEAN DEFAULT FALSE, created_at TIMESTAMPTZ DEFAULT NOW(), updated_at TIMESTAMPTZ DEFAULT NOW() );
CREATE TABLE reports ( id UUID PRIMARY KEY DEFAULT gen_random_uuid(), reporter_id UUID REFERENCES users(id) ON DELETE CASCADE, target_type TEXT NOT NULL, target_id UUID NOT NULL, reason TEXT NOT NULL, status TEXT NOT NULL DEFAULT 'pending', created_at TIMESTAMPTZ DEFAULT NOW() );
